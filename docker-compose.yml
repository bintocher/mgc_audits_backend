services:
  postgres:
    image: postgres:18
    container_name: mgc_audits_postgres
    environment:
      POSTGRES_USER: mgc_audits
      POSTGRES_PASSWORD: mgc_audits_password
      POSTGRES_DB: mgc_audits
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U mgc_audits"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:6.4-alpine
    container_name: mgc_audits_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: mgc_audits_backend
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    environment:
      DATABASE_URL: postgresql+asyncpg://mgc_audits:mgc_audits_password@postgres:5432/mgc_audits
      REDIS_URL: redis://redis:6379/0
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    env_file:
      - .env

  celery_worker:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: mgc_audits_celery_worker
    command: celery -A app.core.celery_worker worker --loglevel=info
    volumes:
      - .:/app
    environment:
      DATABASE_URL: postgresql+asyncpg://mgc_audits:mgc_audits_password@postgres:5432/mgc_audits
      REDIS_URL: redis://redis:6379/0
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    env_file:
      - .env

  celery_beat:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: mgc_audits_celery_beat
    command: celery -A app.core.celery_worker beat --loglevel=info
    volumes:
      - .:/app
    environment:
      DATABASE_URL: postgresql+asyncpg://mgc_audits:mgc_audits_password@postgres:5432/mgc_audits
      REDIS_URL: redis://redis:6379/0
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    env_file:
      - .env

volumes:
  postgres_data:
  redis_data:
